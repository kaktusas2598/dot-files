# This config file uses keycodes (bindsym) and was written for the QWERTY
# layout.
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Mod1 - Alt1
# Mod4 - Super/Win
# WSL only:
#set $mod Mod1
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 11
font pango:UbuntuMono Nerd Font 13


# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 11
#font pango:UbuntuMono Nerd Font 14

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Sreen brightness controls
#bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
#bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness
# This requires brightnessctl to be installed though, not sure why xbacklight isn't working
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl --min-val=2 -q set 3%-
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl -q set 3%+

# TODO
# Tested this way on Ubuntu to control brightness and it works:
# 1. Find out display name: xrandr | grep " connected" | cut -f1 -d " "
# 2. Change brightness: xrandr --output displayName --brightness 1.0 (between 0.0 and 1.0)
# For notifications we can use:
# notify-send -i /path/to/icon/icon.png "Title" "Notification"

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
#tiling_drag modifier titlebar

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

#######################################
#               Keybinds              #
#######################################
# start a terminal: urxvt, kitty, alacritty..
bindsym $mod+Return exec kitty
bindsym $mod+Shift+Return exec urxvt

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
bindsym $mod+d exec "rofi -modi drun,run -show drun -opacity '85' -font 'UbuntuMono Nerd Font 14'"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# Screenshot of selected area
bindsym Print exec --no-startup-id maim -u -s ~/Pictures/screenshot-"$(date '+%y%m%d-%H%M-%S').png"| xclip -sel c -t image/png
# Screenshot of entire window
bindsym $mod+Print exec --no-startup-id maim -u --window $(xdotool getactivewindow) | tee ~/Pictures/screenshot-"$(date '+%y%m%d-%H%M-%S').png" | xclip -sel c -t image/png
# TODO: another shortcut for entire screen

# change focus
bindsym $mod+$left focus left
bindsym $mod+$right focus right
bindsym $mod+$up focus up
bindsym $mod+$down focus down

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#bindsym $mod+ISO_Level3_Shift focus left
#bindsym $mod+Super_R focus down
#bindsym $mod+Print focus up

# split in horizontal orientation
#bindsym $mod+h split h
bindsym $mod+o split h
#bindsym $mod+- split h

# split in vertical orientation
#bindsym $mod+| split v
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Moving workspaces between screens
bindsym $mod+m move workspace to output right

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: "
set $ws2 "2: "
set $ws3 "3: "
set $ws4 "4: 󰭺"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "0: 󰎈"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Assign different programs to particular workspaces
# To find windows class, use xprop utility and click on program
#assign [ class = "kitty" ] $ws1
assign [ class = "Google-chrome" ] $ws2
assign [ class = "Slack" ] $ws4
assign [ class = "Spotify" ] $ws10
assign [ class = "spotify" ] $ws10
# "Google-chrome"
# "firefox"
# "jetbrains-phpstorm"

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym Mod1+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or Mod1+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

# Wifi popup always floating
for_window [class="Nm-connection-editor"] floating enable

#######################################

# Change window border styles: pixel|normal|none
default_border pixel 2
default_floating_border normal

# i3 v4.22 needed for gap functionality
gaps outer 3
gaps inner 5
smart_gaps inverse_outer

# Mouse moving to other window will not change focus, but you can still
# use the mouse click to change focus if needed
focus_follows_mouse no

# # # # # # # # # # # # # # # # # # # #
# Gruvbox Dark theme
set $bg #282828
set $fg #fbf1c7
set $red #cc241d
set $green #98971a
set $green2 #b8bb26
set $yellow #d79921
set $blue #458588
set $blue2 #83a598
set $purple #b16286
set $aqua #689d68
set $gray #a89984
set $darkgray #1d2021
set $lightgray #bdae93
set $white #ebdbb2
set $orange #fe8019

# Lock screen
#bindsym $mod+Shift+x exec i3lock --color "$bg"
bindsym $mod+Shift+x exec ~/dot-files/scripts/i3lock.sh

#bar {
    #position top
    #tray_output primary
    #font pango:UbuntuMono Nerd Font 14
    ##status_command i3status
    #status_command SCRIPT_DIR=~/.config/i3blocks/scripts i3blocks -c ~/.config/i3blocks/config

    #colors {
        #separator $fg
        ## bar background color
        #background $bg
        ## text color used for blocks that do not have a color specified.
        #statusline $lightgray
        ## workspaces section
        ##                    border  backgr. text
        #focused_workspace    $orange $orange $bg
        #inactive_workspace   $darkgray $darkgray $lightgray
        #active_workspace     $darkgray $darkgray $lightgray
        #urgent_workspace     $red $red $bg
    #}
#}
# i3bar can also be replaced entirely by something as https://github.com/polybar/polybar for example
# TODO: decide on one status line and use that
exec_always --no-startup-id ~/.config/polybar/launch.sh &

# class                 border|backgr|text|indicator|child_border
client.focused          $lightgray $lightgray $bg $purple $aqua
client.focused_inactive $darkgray $darkgray $lightgray $purple $darkgray
client.unfocused        $darkgray $darkgray $lightgray $purple $darkgray
client.urgent           $red $red $white $red $red
# # # # # # # # # # # # # # # # # #


for_window [class="Yad"] floating enable

exec_always --no-startup-id dunst -config ~/.config/dunst/dunstrc

# Set wallpaper on startup using feh
exec_always feh --bg-fill $HOME/Pictures/wallpaper.png

# Start compositor to enable things like transparency
# https://github.com/yshui/picom
# Or: https://github.com/chjj/compton
exec_always picom
